package cmd

import (
	"os"
	"path/filepath"
	"strings"
	"text/template"

	"github.com/spf13/cobra"
)

var scriptTemplate = template.Must(template.New("").Parse(strings.TrimSpace(`
#!/bin/sh
# generated by smallweb install

exec smallweb run "{{ .App }}" "$@"
`)))

func NewCmdInstall() *cobra.Command {
	cmd := &cobra.Command{
		Use:     "install [app]",
		Short:   "install an app to the local bin directory",
		GroupID: CoreGroupID,
		Args:    cobra.ExactArgs(1),
		ValidArgsFunction: func(cmd *cobra.Command, args []string, toComplete string) ([]string, cobra.ShellCompDirective) {
			if len(args) > 0 {
				return nil, cobra.ShellCompDirectiveNoFileComp
			}

			return completeApp(cmd, args, toComplete)
		},
		RunE: func(cmd *cobra.Command, args []string) error {
			binHome := os.Getenv("XDG_BIN_HOME")
			if binHome == "" {
				binHome = filepath.Join(os.Getenv("HOME"), ".local", "bin")
			}

			if err := os.MkdirAll(binHome, 0755); err != nil {
				return err
			}

			binPath := filepath.Join(binHome, args[0])
			f, err := os.OpenFile(binPath, os.O_CREATE|os.O_WRONLY|os.O_TRUNC, 0755)
			if err != nil {
				return err
			}

			if err := scriptTemplate.Execute(f, map[string]string{"App": args[0]}); err != nil {
				return err
			}

			cmd.PrintErrln("Installed", args[0], "to", binPath)
			return nil
		},
	}

	return cmd
}
